#!/bin/bash
# Скрипт для автоматической регулировки скорости вращения вентиляторов видеокарт NVIDIA 
# в режиме overclocking
# Для работы программы необходимо установить следующие зависимости:
# sudo apt install zenity
# А так же отредактировать переменные программы по используемых в системе текстовых редакторах 
# Справка по работе с программой
# h или help - справка
# r          - Ручное включение регулировки скорости вращения
# on         - Включение автоматичекой регулировки
# off        - Выключение автоматической регулировки
# m          - Включение мониторинга работы программы
# e          - Редактирование файла настроек программы
# Если программа включена без передачи каких-либо параметров, включается графичесский интерфейс упарвления
# и ожидает выбора соответствующего выбора меню. Если ранее работа скрипта была выключена передачей
# соответствующего параметра скрипту или же выбором нужного меню графического интерфейса, графический 
# интерфейс будет содержать только 2 меню, Редактирование и Включение регулировки. В другом случае
# графический интерфейс будет включать в себя 4 пункта меню
# Для автоматического включение скрипта, создаем в CRON следующее задание
# SHELL=/bin/bash
# PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/cuda/bin
# @hourly /opt/mining/.bin/controlTemp REG # включение скрипта каждый час
# */10 * * * * /opt/mining/.bin/controlTemp REG # включение скрипта каждые 10 минут
# Последняя строка правила cron используется для включения скрипта 1 раз в 10 мин. Предпоследняя используется для включения
# скрипта 1 раз в час 
name=menuRegFan
confDir="/opt/mining"
conf="fan.cfg"
CONF=$confDir/$conf
logDir="/opt/mining/.log"
log="gpu.log"
LOG=$logDir/$log
Editor="xed" 	# GUI Text editor
editor="vim"	# Console text editor
Terminal="xfce4-terminal" # XFCE GUI terminal
export DISPLAY=:0.0 # Export display
NGPU=$(lspci | grep NVIDIA | grep VGA | wc -l)
source $CONF
inp=$1
#=============== MSG Box =======================
title="Программа автоматической регулировки вентиляторов GPU"
ititle="Info"
fanRegOn="Автоматическая регулировка включена"
fanRegOff="Автоматическая регулировка выключена"
RegOn="Включить автоматическую регулировку"
RegOff="Выключить автоматическую регулировку"
RefFan="Выполнить настройку скорости вращения вентиляторов"
Mon="Включить мониторинг работы программы"
editConf="Редактировать файл настроек"
noConf="Нет файла настроек"
titleman="Программа автоматической регулировки вентиляторов GPU"
Help="Справка по работе с програмой автоматического регулирования скорости вентиляторов видеокарат"
On="Включение автоматического регулирования скорости вращения"
Reg="Ручной запуск программы регулирования скорости вращения вентиляторов"
Off="Выключение автоматического регулирования скорости вращения"
Mon="Включение мониторинга работы программы"
Edit="Редактировать настройки автоматической регулировки скорости вентиляторов видеокарт"
#===============================================
    # Проверяем наличие файла настроек автоматической регулировки вентиляторов
    # Если файла настроек нет, работа скрипта будет завершена 
    
testConf() {
    if [ -f $CONF ] ; then
       true
    else 
        echo $(date +'%d-%m-%Y %T') $noConf >> $LOG
        zenity --info --title="$ititle" --text="$noConf"\
                --timeout=3 --width=300 --height=100
        exit 0
    fi }

#==============================================
    # Функции управления вентиляторами видеокарт 
    # Включение/выключение ручного управления вращением вентиляторов
fanOnOff() {
	nvidia-settings -a "[gpu:$1]/GPUFanControlState=$2"  >> $LOG
}
    # Управление скоростью вращения вентиляторов
fanSpeed() {
    nvidia-settings -a "[fan:$1]/GPUTargetFanSpeed=$2"  >> $LOG
}

#==============================================
    # Основная функция управления автоматической регулировкой вентиляторов
mainSet()
{
    if [ $1 = "REG" -o $1 = "r" ] ; then
        for (( i=0; i < $NGPU; i++))
         do
	            fGPU=$(nvidia-smi --id=$i --query-gpu=fan.speed --format=csv | \
                    awk 'BEGIN{FS="\n"; RS=""} {print $2}' | awk '{print $1}')
	            tGPU=$(nvidia-smi --id=$i --query-gpu=temperature.gpu --format=csv | \
                    awk 'BEGIN{FS="\n"; RS=""} {print $2}' | awk '{print $1}')
            echo $(date +'%d-%m-%Y %T') >> $LOG
            echo GPU$i $fGPU\% $tGPU\C  >> $LOG
            if [ $tGPU -le $T_MIN ] ; then
	            echo "F-AUTO Включаем автоматический режим"  >> $LOG
	            fanOnOff $i 0
	            sleep 1
            fi
            if [ $tGPU -ge $T_MIN -a $tGPU -lt $T_1 ] ; then
	            if [ $fGPU -ne $F_MIN ] ; then
		            echo "F1 Включаем скорость $F_MIN%"  >> $LOG
		            fanOnOff $i 1
		            fanSpeed $i $F_MIN
		            sleep 1
	            fi
            fi
            if [ $tGPU -ge $T_1 -a $tGPU -lt $T_2 ] ; then
	            if [ $fGPU -ne $F_1 ] ; then
		            echo "F2 Включаем скорость $F_1%"  >> $LOG
		            fanOnOff $i 1
		            fanSpeed $i $F_1
		            sleep 1
	            fi
            fi
            if [ $tGPU -ge $T_2 -a $tGPU -lt $T_3 ] ; then
	            if [ $fGPU -ne $F_2 ] ; then
		            echo "F3 Включаем скорость $F_2%"  >> $LOG
		            fanOnOff $i 1
		            fanSpeed $i $F_2
		            sleep 1
	            fi
            fi
            if [ $tGPU -ge $T_3 -a $tGPU -lt $T_4 ] ; then 
	            if [ $fGPU -ne $F_3 ] ; then
		            echo "F4 Включаем скорость $F_3%"  >> $LOG
		            fanOnOff $i 1
		            fanSpeed $i $F_3
		            sleep 1
	            fi
            fi
            if [ $tGPU -ge $T_4 -a $tGPU -lt $T_5 ] ; then
	            if [ $fGPU -ne $F_4 ] ; then
		            echo "F5 Включаем скорость $F_4%"  >> $LOG
		            fanOnOff $i 1
		            fanSpeed $i $F_4
		            sleep 1
	            fi
            fi
            if [ $tGPU -ge $T_5 -a $tGPU -lt $T_MAX ] ; then
	            if [ $fGPU -ne $F_5 ] ; then
		            echo "F6 Включаем скорость $F_5%"  >> $LOG
		            fanOnOff $i 1
		            fanSpeed $i $F_5
		            sleep 1
	            fi
            fi
            if [ $tGPU -ge $T_MAX ] ; then
	            if [ $fGPU -ne $F_MAX ] ; then
		            echo "F_MAX Включаем скорость $F_MAX%"  >> $LOG
		            fanOnOff $i 1
		            fanSpeed $i $F_MAX
		            sleep 1
	            fi
            fi
        done   
    fi

    if [ $1 = "EDIT" -o $1 = "e" ] ; then
		if [ $1 = "EDIT" ] ; then
        	$Editor $CONF
		else $editor $CONF
		fi
    fi

    if [ $1 = "MON" -o $1 = "m" ] ; then
		if [ $1 = "MON" ] ; then
        	$Terminal --command="tail -n 20 -f $LOG"
		else tail -n 20 -f $LOG
		fi
    fi

    if [ $1 = "ON" -o $1 = "on" ] ; then
		if [ $control = "off" ] ; then
        	sed -i 's/control="off"/control="on"/' $CONF
			echo $(date +'%d-%m-%Y %T') $fanRegOn >> $LOG
		fi
    fi

    if [ $1 = "OFF" -o $1 = "off" ] ; then
		if [ $control = "on" ] ; then
        	sed -i 's/control="on"/control="off"/' $CONF
			echo $(date +'%d-%m-%Y %T') $fanRegOff >> $LOG
		fi
    fi

	if [ $1 = "help" -o $1 = "h" ] ; then
		echo "help или h - " $Help
		echo "r - " $Reg
		echo "on - " $On
		echo "off - " $Off
		echo "m - " $Mon
		echo "e - " $Edit
	fi
}

    # GUI интерфейс управления скриптом
interface() {
    testConf
    if [ -z $inp ] ; then
        if [ $control = "on" ] ; then
            txt=$fanRegOn
            setting=$(zenity --list --title="$title" --text="$txt" \
            --column="Команда" --column="Краткое описание" \
            --width=500 --height=200 \
            REG  "$RefFan"  \
            MON  "$Mon"     \
            EDIT "$editConf" \
            OFF "$RegOff")
        else txt=$fanRegOff
            setting=$(zenity --list --title="$title" --text="$txt" \
            --column="Команда" --column="Краткое описание" \
            --width=500 --height=200 \
            EDIT "$editConf" \
            ON "$RegOn")
        fi
    else setting=$inp
    fi }
interface
mainSet $setting

